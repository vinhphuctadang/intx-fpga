

================================================================
== Vitis HLS Report for 'add'
================================================================
* Date:           Mon May 31 22:33:12 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        intx-fpga
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.560 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       11|  0.110 us|  0.110 us|   12|   12|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        3|        3|         1|          1|          1|     4|       yes|
        |- Loop 2  |        4|        4|         1|          1|          1|     4|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 2
  Pipeline-0 : II = 1, D = 1, States = { 2 }
  Pipeline-1 : II = 1, D = 1, States = { 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 4 
4 --> 5 4 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_0 = alloca i32 1"   --->   Operation 6 'alloca' 's_word_num_bits_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_0 = alloca i32 1"   --->   Operation 7 'alloca' 's_word_num_bits_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_0 = alloca i32 1"   --->   Operation 8 'alloca' 's_word_num_bits_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_0 = alloca i32 1"   --->   Operation 9 'alloca' 's_word_num_bits_3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 0"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 11 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 %a"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 %b"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %b, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%b_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %b"   --->   Operation 16 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%a_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %a"   --->   Operation 17 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty = trunc i256 %a_read"   --->   Operation 18 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%a_word_num_bits_assign_1 = partselect i64 @_ssdm_op_PartSelect.i64.i256.i32.i32, i256 %a_read, i32 64, i32 127"   --->   Operation 19 'partselect' 'a_word_num_bits_assign_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%a_word_num_bits_assign_2 = partselect i64 @_ssdm_op_PartSelect.i64.i256.i32.i32, i256 %a_read, i32 128, i32 191"   --->   Operation 20 'partselect' 'a_word_num_bits_assign_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%a_word_num_bits_assign_3 = partselect i64 @_ssdm_op_PartSelect.i64.i256.i32.i32, i256 %a_read, i32 192, i32 255"   --->   Operation 21 'partselect' 'a_word_num_bits_assign_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty_6 = trunc i256 %b_read"   --->   Operation 22 'trunc' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%b_word_num_bits_assign_1 = partselect i64 @_ssdm_op_PartSelect.i64.i256.i32.i32, i256 %b_read, i32 64, i32 127"   --->   Operation 23 'partselect' 'b_word_num_bits_assign_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%b_word_num_bits_assign_2 = partselect i64 @_ssdm_op_PartSelect.i64.i256.i32.i32, i256 %b_read, i32 128, i32 191"   --->   Operation 24 'partselect' 'b_word_num_bits_assign_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%b_word_num_bits_assign_3 = partselect i64 @_ssdm_op_PartSelect.i64.i256.i32.i32, i256 %b_read, i32 192, i32 255"   --->   Operation 25 'partselect' 'b_word_num_bits_assign_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.46ns)   --->   "%br_ln29 = br void %branch0" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 26 'br' 'br_ln29' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 0.62>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%phi_ln29 = phi i2 0, void, i2 %add_ln29, void %branch0" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 27 'phi' 'phi_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.62ns)   --->   "%add_ln29 = add i2 %phi_ln29, i2 1" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 28 'add' 'add_ln29' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_0_load = load i64 %s_word_num_bits_0_0"   --->   Operation 29 'load' 's_word_num_bits_0_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_0_load = load i64 %s_word_num_bits_1_0"   --->   Operation 30 'load' 's_word_num_bits_1_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_0_load = load i64 %s_word_num_bits_2_0"   --->   Operation 31 'load' 's_word_num_bits_2_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_0_load = load i64 %s_word_num_bits_3_0"   --->   Operation 32 'load' 's_word_num_bits_3_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 33 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.54ns)   --->   "%s_word_num_bits_0_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 0, i64 %s_word_num_bits_0_0_load, i64 %s_word_num_bits_0_0_load, i64 %s_word_num_bits_0_0_load, i2 %phi_ln29" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 34 'mux' 's_word_num_bits_0_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.54ns)   --->   "%s_word_num_bits_1_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %s_word_num_bits_1_0_load, i64 0, i64 %s_word_num_bits_1_0_load, i64 %s_word_num_bits_1_0_load, i2 %phi_ln29" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 35 'mux' 's_word_num_bits_1_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.54ns)   --->   "%s_word_num_bits_2_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %s_word_num_bits_2_0_load, i64 %s_word_num_bits_2_0_load, i64 0, i64 %s_word_num_bits_2_0_load, i2 %phi_ln29" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 36 'mux' 's_word_num_bits_2_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.54ns)   --->   "%s_word_num_bits_3_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %s_word_num_bits_3_0_load, i64 %s_word_num_bits_3_0_load, i64 %s_word_num_bits_3_0_load, i64 0, i2 %phi_ln29" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 37 'mux' 's_word_num_bits_3_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.39ns)   --->   "%icmp_ln29 = icmp_eq  i2 %phi_ln29, i2 3" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 38 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%empty_7 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 39 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_3_1, i64 %s_word_num_bits_3_0" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 40 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_2_1, i64 %s_word_num_bits_2_0" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 41 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_1_1, i64 %s_word_num_bits_1_0" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 42 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_0_1, i64 %s_word_num_bits_0_0" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 43 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29, void %branch0, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.preheader" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 44 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.46>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_2 = alloca i32 1"   --->   Operation 45 'alloca' 's_word_num_bits_0_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_2 = alloca i32 1"   --->   Operation 46 'alloca' 's_word_num_bits_1_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_2 = alloca i32 1"   --->   Operation 47 'alloca' 's_word_num_bits_2_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_2 = alloca i32 1"   --->   Operation 48 'alloca' 's_word_num_bits_3_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_3_1, i64 %s_word_num_bits_3_2" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 49 'store' 'store_ln29' <Predicate = true> <Delay = 0.46>
ST_3 : Operation 50 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_2_1, i64 %s_word_num_bits_2_2" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 50 'store' 'store_ln29' <Predicate = true> <Delay = 0.46>
ST_3 : Operation 51 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_1_1, i64 %s_word_num_bits_1_2" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 51 'store' 'store_ln29' <Predicate = true> <Delay = 0.46>
ST_3 : Operation 52 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_0_1, i64 %s_word_num_bits_0_2" [intx-fpga/solution1/intx.hpp:29]   --->   Operation 52 'store' 'store_ln29' <Predicate = true> <Delay = 0.46>
ST_3 : Operation 53 [1/1] (0.46ns)   --->   "%br_ln0 = br void %_ZN4intx4uintILj256EEC2Ev.exit.i.i"   --->   Operation 53 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>

State 4 <SV = 3> <Delay = 4.56>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%i = phi i3 %i_1, void %.split11, i3 0, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.preheader"   --->   Operation 54 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%k = phi i1 %k_1, void %.split11, i1 0, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.preheader"   --->   Operation 55 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.71ns)   --->   "%i_1 = add i3 %i, i3 1" [intx-fpga/solution1/int128.hpp:173]   --->   Operation 56 'add' 'i_1' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 57 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.56ns)   --->   "%icmp_ln173 = icmp_eq  i3 %i, i3 4" [intx-fpga/solution1/int128.hpp:173]   --->   Operation 58 'icmp' 'icmp_ln173' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%empty_8 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 59 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln173 = br i1 %icmp_ln173, void %.split, void %_ZN4intxplILj256EEENS_4uintIXT_EEERKS2_S4_.exit" [intx-fpga/solution1/int128.hpp:173]   --->   Operation 60 'br' 'br_ln173' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i3 %i" [intx-fpga/solution1/intx.hpp:50]   --->   Operation 61 'trunc' 'trunc_ln50' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.54ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %empty, i64 %a_word_num_bits_assign_1, i64 %a_word_num_bits_assign_2, i64 %a_word_num_bits_assign_3, i2 %trunc_ln50" [intx-fpga/solution1/int128.hpp:175]   --->   Operation 62 'mux' 'tmp' <Predicate = (!icmp_ln173)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.54ns)   --->   "%tmp_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %empty_6, i64 %b_word_num_bits_assign_1, i64 %b_word_num_bits_assign_2, i64 %b_word_num_bits_assign_3, i2 %trunc_ln50" [intx-fpga/solution1/int128.hpp:175]   --->   Operation 63 'mux' 'tmp_1' <Predicate = (!icmp_ln173)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (1.36ns)   --->   "%add_ln175 = add i64 %tmp_1, i64 %tmp" [intx-fpga/solution1/int128.hpp:175]   --->   Operation 64 'add' 'add_ln175' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (1.14ns)   --->   "%k1 = icmp_ult  i64 %add_ln175, i64 %tmp" [intx-fpga/solution1/int128.hpp:176]   --->   Operation 65 'icmp' 'k1' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln177 = zext i1 %k" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 66 'zext' 'zext_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (1.36ns)   --->   "%add_ln177 = add i64 %add_ln175, i64 %zext_ln177" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 67 'add' 'add_ln177' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (0.72ns)   --->   "%switch_ln177 = switch i2 %trunc_ln50, void %branch7, i2 0, void %.split..split11_crit_edge, i2 1, void %branch5, i2 2, void %branch6" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 68 'switch' 'switch_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.72>
ST_4 : Operation 69 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_2_2" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 69 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 2)> <Delay = 0.46>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 70 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 2)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_1_2" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 71 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 1)> <Delay = 0.46>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 72 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 1)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_0_2" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 73 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 0)> <Delay = 0.46>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 74 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 0)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_3_2" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 75 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 3)> <Delay = 0.46>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [intx-fpga/solution1/int128.hpp:177]   --->   Operation 76 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50 == 3)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (1.14ns)   --->   "%icmp_ln178 = icmp_ult  i64 %add_ln177, i64 %zext_ln177" [intx-fpga/solution1/int128.hpp:178]   --->   Operation 77 'icmp' 'icmp_ln178' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.14ns)   --->   "%k_1 = or i1 %icmp_ln178, i1 %k1" [intx-fpga/solution1/int128.hpp:178]   --->   Operation 78 'or' 'k_1' <Predicate = (!icmp_ln173)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZN4intx4uintILj256EEC2Ev.exit.i.i"   --->   Operation 79 'br' 'br_ln0' <Predicate = (!icmp_ln173)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_2_load = load i64 %s_word_num_bits_0_2" [intx-fpga/solution1/adder.cpp:5]   --->   Operation 80 'load' 's_word_num_bits_0_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_2_load = load i64 %s_word_num_bits_1_2" [intx-fpga/solution1/adder.cpp:5]   --->   Operation 81 'load' 's_word_num_bits_1_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_2_load = load i64 %s_word_num_bits_2_2" [intx-fpga/solution1/adder.cpp:5]   --->   Operation 82 'load' 's_word_num_bits_2_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_2_load = load i64 %s_word_num_bits_3_2" [intx-fpga/solution1/adder.cpp:5]   --->   Operation 83 'load' 's_word_num_bits_3_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%or_ln5_2 = bitconcatenate i256 @_ssdm_op_BitConcatenate.i256.i64.i64.i64.i64, i64 %s_word_num_bits_3_2_load, i64 %s_word_num_bits_2_2_load, i64 %s_word_num_bits_1_2_load, i64 %s_word_num_bits_0_2_load" [intx-fpga/solution1/adder.cpp:5]   --->   Operation 84 'bitconcatenate' 'or_ln5_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%ret_ln5 = ret i256 %or_ln5_2" [intx-fpga/solution1/adder.cpp:5]   --->   Operation 85 'ret' 'ret_ln5' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln29', intx-fpga/solution1/intx.hpp:29) with incoming values : ('add_ln29', intx-fpga/solution1/intx.hpp:29) [25]  (0.46 ns)

 <State 2>: 0.621ns
The critical path consists of the following:
	'phi' operation ('phi_ln29', intx-fpga/solution1/intx.hpp:29) with incoming values : ('add_ln29', intx-fpga/solution1/intx.hpp:29) [25]  (0 ns)
	'add' operation ('add_ln29', intx-fpga/solution1/intx.hpp:29) [26]  (0.621 ns)

 <State 3>: 0.46ns
The critical path consists of the following:
	'alloca' operation ('s_word_num_bits_3_2') [47]  (0 ns)
	'store' operation ('store_ln29', intx-fpga/solution1/intx.hpp:29) of variable 's_word_num_bits_3_1', intx-fpga/solution1/intx.hpp:29 on local variable 's_word_num_bits_3_2' [48]  (0.46 ns)

 <State 4>: 4.56ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', intx-fpga/solution1/int128.hpp:173) [54]  (0 ns)
	'mux' operation ('tmp', intx-fpga/solution1/int128.hpp:175) [63]  (0.544 ns)
	'add' operation ('add_ln175', intx-fpga/solution1/int128.hpp:175) [65]  (1.36 ns)
	'add' operation ('add_ln177', intx-fpga/solution1/int128.hpp:177) [68]  (1.36 ns)
	'icmp' operation ('icmp_ln178', intx-fpga/solution1/int128.hpp:178) [83]  (1.14 ns)
	'or' operation ('k', intx-fpga/solution1/int128.hpp:178) [84]  (0.148 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
